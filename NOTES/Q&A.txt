* think what part of the compilation should avoid the test files 
        -   there is a test container, dev container, build container, and prod container,
        the test container compiles the logic and tests and runs the tests, the dev container 
        also, compile them both but run test only if commanded, the build container (or through
        the dev container command), will run 'tsc' with a production 'tsConfig' file the will
        not compile test (and not dev dependencies, set appropriate environment variables, and more...)


* should 'server' and 'app' be a class or a script?
        - pro's of script:
                1. no constructor so no need to inject anything
                2. no need to instantiate 
        - pro's of class:
                1. a constructor that I can inject dependencies into like
                        a. for server
                        - a mock app
                        - a mock environment
                        b. for app
                        - mock dependencies instead of npm packages - (better do with jest's mock module?)'
                        - mock router